(function (c, g, h, k) {
    var e = function (a, b) {
        this.elem = a;
        this.$elem = c(a);
        this.options = b;
        this.metadata = this.$elem.data("plugin-options");
        this.$win = c(g);
        this.sections = {};
        this.didScroll = !1;
        this.$doc = c(h);
        this.docHeight = this.$doc.height()
    };
    e.prototype = {
        defaults: {
            navItems: "a",
            currentClass: "current",
            changeHash: !1,
            easing: "swing",
            filter: "",
            scrollSpeed: 750,
            scrollThreshold: .5,
            begin: !1,
            end: !1,
            scrollChange: !1
        },
        init: function () {
            this.config = c.extend({}, this.defaults, this.options, this.metadata);
            this.$nav = this.$elem.find(this.config.navItems);
            "" !== this.config.filter && (this.$nav = this.$nav.filter(this.config.filter));
            this.$nav.on("click.onePageNav", c.proxy(this.handleClick, this));
            this.getPositions();
            this.bindInterval();
            this.$win.on("resize.onePageNav", c.proxy(this.getPositions, this));
            return this
        },
        adjustNav: function (a, b) {
            a.$elem.find("." + a.config.currentClass).removeClass(a.config.currentClass);
            b.addClass(a.config.currentClass)
        },
        bindInterval: function () {
            var a = this,
                b;
            a.$win.on("scroll.onePageNav", function () {
                a.didScroll = !0
            });
            a.t = setInterval(function () {
                b =
                    a.$doc.height();
                a.didScroll && (a.didScroll = !1, a.scrollChange());
                b !== a.docHeight && (a.docHeight = b, a.getPositions())
            }, 250)
        },
        getHash: function (a) {
            return a.attr("href").split("#")[1]
        },
        getPositions: function () {
            var a = this,
                b, f, d;
            a.$nav.each(function () {
                b = a.getHash(c(this));
                d = c("#" + b);
                d.length && (f = d.offset().top, a.sections[b] = Math.round(f))
            })
        },
        getSection: function (a) {
            var b = null,
                c = Math.round(this.$win.height() * this.config.scrollThreshold),
                d;
            for (d in this.sections) this.sections[d] - c < a && (b = d);
            return b
        },
        handleClick: function (a) {
            var b =
                this,
                f = c(a.currentTarget),
                d = f.parent(),
                e = "#" + b.getHash(f);
            d.hasClass(b.config.currentClass) || (b.config.begin && b.config.begin(), b.adjustNav(b, d), b.unbindInterval(), b.scrollTo(e, function () {
                b.config.changeHash && (g.location.hash = e);
                b.bindInterval();
                b.config.end && b.config.end()
            }));
            a.preventDefault()
        },
        scrollChange: function () {
            var a = this.$win.scrollTop();
            a = this.getSection(a);
            null !== a && (a = this.$elem.find('a[href$="#' + a + '"]').parent(), a.hasClass(this.config.currentClass) || (this.adjustNav(this, a), this.config.scrollChange &&
                this.config.scrollChange(a)))
        },
        scrollTo: function (a, b) {
            var e = c(a).offset().top;
            c("html, body").animate({
                scrollTop: e
            }, this.config.scrollSpeed, this.config.easing, b)
        },
        unbindInterval: function () {
            clearInterval(this.t);
            this.$win.unbind("scroll.onePageNav")
        }
    };
    e.defaults = e.prototype.defaults;
    c.fn.onePageNav = function (a) {
        return this.each(function () {
            (new e(this, a)).init()
        })
    }
})(jQuery, window, document);
